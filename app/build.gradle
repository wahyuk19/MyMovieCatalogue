plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
}

apply from: '../shared_dependencies.gradle'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.dicoding.mymoviecatalogue"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            buildConfigField("String", "API_KEY", API_KEY)
            buildConfigField("String", "BASE_URL", BASE_URL)
            buildConfigField("String", "POSTER_URL", POSTER_URL)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_KEY", API_KEY)
            buildConfigField("String", "BASE_URL", BASE_URL)
            buildConfigField("String", "POSTER_URL", POSTER_URL)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    hilt {
        enableExperimentalClasspathAggregation = true
    }
    dynamicFeatures = [':favorite']
}

dependencies {
    implementation project(":core")
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.test.espresso:espresso-idling-resource:$idleResourceVersion"

    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtversion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    testImplementation "androidx.arch.core:core-testing:$androidCoreTestVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    implementation "androidx.room:room-runtime:$roomRuntimeVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.4"
}